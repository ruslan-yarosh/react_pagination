{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","i","Math","ceil","push","className","classNames","disabled","href","onClick","page","map","pageNumber","active","length","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","lastItem","firstItem","itemsToShow","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAQ1C,IAHK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKP,EAAQC,GAAUI,GAAK,EACpDD,EAAYI,KAAKH,GAmBnB,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBT,IAJhB,SAQE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAhCc,WACtB,IAAMC,EAAOZ,EAAc,EAEvBY,EAAO,GACTX,EAAaW,IAuBT,oBAWDV,EAAYW,KAAI,SAAAC,GAAU,OACzB,oBACEP,UAAWC,IACT,YACA,CACEO,OAAQf,IAAgBc,IAJ9B,SASE,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMV,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBACEP,UAAWC,IACT,YACA,CACEC,SAAUT,IAAgBE,EAAYc,SAJ5C,SAQE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBACEV,IAAgBE,EAAYc,OAAS,OAAS,QAEhDL,QAlEc,WACtB,IAAMC,EAAOZ,EAAc,EAEvBY,GAAQV,EAAYc,QACtBf,EAAaW,IAuDT,0BCnFJK,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQd,KAAKe,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgBC,mBAASP,EAAMD,QAAxBlB,EAAP,oBACA,EAA8B0B,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KAWMC,EAAW3B,EAAcD,EAAUD,EACrCA,EACAE,EAAcD,EACZ6B,EAAa5B,EAAcD,EAAWA,EAAU,EAChD8B,EAAcZ,EAAMa,MAAMF,EAAY,EAAGD,GAE/C,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC4B,EADjC,cACgDD,EADhD,eAC+D7B,EAD/D,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOjC,EACPkC,SA1BW,SAACC,GACpBT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,IAmBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAACW,GAAD,OACnBc,EAAed,MAkDb,6BACGiB,EAAYhB,KAAI,SAAAwB,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEhElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d962ed0f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const handlePrevClick = () => {\n    const page = currentPage - 1;\n\n    if (page > 0) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNextClick = () => {\n    const page = currentPage + 1;\n\n    if (page <= pageNumbers.length) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevClick}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: currentPage === pageNumber,\n              },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === pageNumbers.length,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === pageNumbers.length ? 'true' : 'false'\n            }\n            onClick={handleNextClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(items.length);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => (\n    setCurrentPage(page)\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const lastItem = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n  const firstItem = (currentPage * perPage) - perPage + 1;\n  const itemsToShow = items.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {itemsToShow.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}