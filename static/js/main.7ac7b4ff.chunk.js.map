{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","useMemo","numbers","i","Math","ceil","push","className","classNames","disabled","href","onClick","event","page","preventDefault","map","pageNumber","active","handleNumberClick","length","items","from","to","n","getNumbers","App","useState","setPerPage","setCurrentPage","lastItem","firstItem","itemsToShow","slice","id","value","onChange","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,mBAAQ,WAG1B,IAFA,IAAMC,EAAU,GAEPC,EAAI,EAAGA,GAAKC,KAAKC,KAAKT,EAAQC,GAAUM,GAAK,EACpDD,EAAQI,KAAKH,GAGf,OAAOD,IACN,CAACN,EAAOC,IA8BX,OACE,mCACE,qBAAIU,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBX,IAJhB,SAQE,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBZ,EACfa,QA5Cc,SAACC,GACvB,IAAMC,EAAOf,EAAc,EAE3Bc,EAAME,iBAEFD,EAAO,GACTd,EAAac,IAiCT,oBAWDb,EAAYe,KAAI,SAAAC,GAAU,OACzB,oBACET,UAAWC,IACT,YACA,CACES,OAAQnB,IAAgBkB,IAJ9B,SASE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAI,WAAMM,GACVL,QAAS,SAACC,GAAD,OA5CK,SACxBA,EACAI,GAEAJ,EAAME,iBACNf,EAAaiB,GAuCiBE,CAAkBN,EAAOI,IAJ/C,SAMGA,KAREA,MAaT,oBACET,UAAWC,IACT,YACA,CACEC,SAAUX,IAAgBE,EAAYmB,SAJ5C,SAQE,mBACE,UAAQ,WACRZ,UAAU,YACVG,KAAK,QACL,gBACEZ,IAAgBE,EAAYmB,OAAS,OAAS,QAEhDR,QA5Ec,SAACC,GACvB,IAAMC,EAAOf,EAAc,EAE3Bc,EAAME,iBAEFD,GAAQb,EAAYmB,QACtBpB,EAAac,IA+DT,0BCnGJO,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMpB,EAAU,GAEPqB,EAAIF,EAAME,GAAKD,EAAIC,GAAK,EAC/BrB,EAAQI,KAAKiB,GAGf,OAAOrB,EDDKsB,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEd3B,EAAQwB,EAAMD,OAEPM,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgB8B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO5B,EAAP,KAAoB8B,EAApB,KAWMC,EAAW/B,EAAcD,EAAUD,EACrCA,EACAE,EAAcD,EACZiC,EAAahC,EAAcD,EAAWA,EAAU,EAChDkC,EAAcX,EAAMY,MAAMF,EAAY,EAAGD,GAE/C,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCgC,EADjC,cACgDD,EADhD,eAC+DjC,EAD/D,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOrC,EACPsC,SA1BW,SAACvB,GACpBe,GAAYf,EAAMwB,OAAOF,OACzBN,EAAe,IAmBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAACc,GAAD,OACnBe,EAAef,MAkDb,6BACGkB,EAAYhB,KAAI,SAAAuB,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEjElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ac7b4ff.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = useMemo(() => {\n    const numbers = [];\n\n    for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n      numbers.push(i);\n    }\n\n    return numbers;\n  }, [total, perPage]);\n\n  const handlePrevClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const page = currentPage - 1;\n\n    event.preventDefault();\n\n    if (page > 0) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNextClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const page = currentPage + 1;\n\n    event.preventDefault();\n\n    if (page <= pageNumbers.length) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNumberClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    pageNumber: number,\n  ) => {\n    event.preventDefault();\n    onPageChange(pageNumber);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevClick}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              {\n                active: currentPage === pageNumber,\n              },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={(event) => handleNumberClick(event, pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === pageNumbers.length,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === pageNumbers.length ? 'true' : 'false'\n            }\n            onClick={handleNextClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => (\n    setCurrentPage(page)\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const lastItem = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n  const firstItem = (currentPage * perPage) - perPage + 1;\n  const itemsToShow = items.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {itemsToShow.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}